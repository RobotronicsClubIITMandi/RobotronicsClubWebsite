<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta content="width=device-width, initial-scale=1.0" name="viewport">

  <title>Robotronics Club, IIT MANDI</title>
  <meta content="" name="descriptison">
  <meta content="" name="keywords">
  <!-- <script src="https://www.gstatic.com/firebasejs/7.13.1/firebase-app.js"></script> -->

  <!-- TODO: Add SDKs for Firebase products that you want to use
      https://firebase.google.com/docs/web/setup#available-libraries -->
  <!-- <script src="https://www.gstatic.com/firebasejs/7.13.1/firebase-firestore.js"></script> -->

  <!-- Adding jquery at the top as needed in modal -->
  <script src="assets/vendor/jquery/jquery.min.js"></script>


  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css">
  <!-- Favicons -->
  <link href="assets/img/logo.png" rel="icon">
  <link href="assets/img/apple-touch-icon.png" rel="apple-touch-icon">

  <!-- Google Fonts -->
  <link
    href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Roboto:300,300i,400,400i,500,500i,700,700i|Poppins:300,300i,400,400i,500,500i,600,600i,700,700i"
    rel="stylesheet">

  <!-- Vendor CSS Files -->

  <!-- <link href="assets/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet"> -->
  <link href="assets/vendor/icofont/icofont.min.css" rel="stylesheet">
  <link href="assets/vendor/boxicons/css/boxicons.min.css" rel="stylesheet">
  <link href="assets/vendor/animate.css/animate.min.css" rel="stylesheet">
  <link href="assets/vendor/venobox/venobox.css" rel="stylesheet">

  <!-- Template Main CSS File -->
  <link href="assets/css/style.css" rel="stylesheet">
  <link href="stylesheets/formobile.css" rel="stylesheet">

  <style>
    .card {
      margin-bottom: 30px!important;
    }

    #adder_image:hover {
      transform: rotateY(180deg);
      background-color: blue;
    }

    #adder_image {
      transition: ease 0.2s;
    }

    .request-item-tile { 
      color: rgba(153, 152, 152, 0.986);
      background-color: #ffffff;
      padding: 12px;
      margin: 24px;
      box-shadow: 0 2px 2px 0 rgba(0,0,0,0.14), 0 3px 1px -2px rgba(0,0,0,0.12), 0 1px 5px 0 rgba(0,0,0,0.2);
    }

    @media only screen and (max-width: 400px){
      .request-item-tile {
        margin-left: 4px;
        margin-right: 4px;
      }
    }
  </style>

  <!-- =======================================================
  * Template Name: Shuffle - v2.0.0
  * Template URL: https://bootstrapmade.com/bootstrap-3-one-page-template-free-shuffle/
  * Author: BootstrapMade.com
  * License: https://bootstrapmade.com/license/
  ======================================================== -->
</head>

<body>



  <!-- ======= Header ======= -->
  <header id="header" style="background-color: #3d4f4c; color: #fff;">
    <div class="container d-flex">

      <!-- To go to the Main Website -->
      <div class="logo mr-auto">
        <a href="/#"><img src="assets/img/logo.png" alt=""
            style="float:left;height: 70%;" class="img-fluid"></a>


      </div>

      <nav class="nav-menu d-none d-lg-block">
        <ul>
          <li><a href="#header">Home</a></li>
          <li><a href="#calender">Calender</a></li>
          <li><a href="#services">Inventory</a></li>
          <li><a href="#projects">Projects</a></li>
          <li><a href="#issue-requests">Issue Requests</a></li>
          <li><a href="#issue-accepted">Issued</a></li>
          <li><a href="/">View Website</a></li>
          <li><a href="/admin/logout">Logout</a></li>

        </ul>
      </nav><!-- .nav-menu -->

    </div>
  </header><!-- End Header -->

  <main id="main">

    <!-- ======= About Us Section ======= -->
    <section id="about" class="about">
      <div class="container">

        <div class="section-title">
          <h2>Admin Page</h2>
          <h5>Welcome <%= user %></h5>
        </div>
    </section>

    <!-- ======= Calender and notification stuff ======= -->
    <section id="calender" class="info-box section-bg">
      <div class="container-fluid">

        <div class="row">

          <div class="col-sm-6">

            <div class="content" style="padding-top:0;">
              <h3>Notifications</h3>
              <a href="/news/create">
                <div class="btn btn-primary btn-lg">Add Notifications</div>
              </a><br><br>
            </div>

            <div class="accordion-list">
              <ul id="news_ki_list">
              
                
                
                
                <% 
                function date_sort(a, b) {
                  return new Date(b.date_created).getTime() - new Date(a.date_created).getTime();
              }
              news.sort(date_sort);
                
                for( var index = 1; index <= news.length && index <=10; index++ ) { %>
                <li style="border: black 1px solid;">

                  <a data-toggle="collapse" class="collapse" href="#accordion-list-<%= index %>">
                    <div class="row">
                      <div class="col-10"> <span><%= index %> </span> <%= news[index-1].toJSON()['title'] %> </div>
                      
                      <div class="col-1"><%= news[index-1].toJSON()['date_created'].getDate() %>/<%= news[index-1].toJSON()['date_created'].getMonth()+1 %>/<%= news[index-1].toJSON()['date_created'].getFullYear() %> </div>
                    </div>
                    <i class="bx bx-chevron-down icon-show"></i>
                    <i class="bx bx-chevron-up icon-close"></i>
                  </a>

                  <div id="accordion-list-<%= index %>" class="collapse" data-parent=".accordion-list">
                    <p><%= news[index-1].toJSON()['content'] %> </p>
                  </div>

                  <a href="/news/<%= news[index-1].toJSON()['_id'] %>/update" style="display: inline;">
                    <div class="btn btn-primary btn-sm" style="float: right; margin:10px;">update</div>
                  </a>

                  <a href="/news/<%= news[index-1].toJSON()['_id'] %>/delete" style="display: inline;">
                    <div class="btn btn-primary btn-sm" style="float: right; margin:10px;">remove</div>
                  </a>

                </li>
                <% } %>
                <br>
                <% if (news.length>10) {%>
                  <li style="text-align:center">
                        <a href="/notifications" class="btn">Show All</a>
                  </li>
                <% } %>
              </ul>
            </div>

          </div>
          <div class="col-sm-6" style="min-height: 380px;">
            <iframe
              src="https://calendar.google.com/calendar/embed?height=600&amp;wkst=2&amp;bgcolor=%23ffffff&amp;ctz=Asia%2FKolkata&amp;src=cHJhdHl1c2hnYXVyYXZnb0BnbWFpbC5jb20&amp;src=YWRkcmVzc2Jvb2sjY29udGFjdHNAZ3JvdXAudi5jYWxlbmRhci5nb29nbGUuY29t&amp;src=ZW4uaW5kaWFuI2hvbGlkYXlAZ3JvdXAudi5jYWxlbmRhci5nb29nbGUuY29t&amp;src=Z3lta2hhbmFpaXRtYW5kaUBnbWFpbC5jb20&amp;color=%234285F4&amp;color=%2333B679&amp;color=%230B8043&amp;color=%23AD1457&amp;showTitle=1&amp;showDate=1&amp;showPrint=0&amp;showTabs=0&amp;showCalendars=0&amp;title=Upcoming%20Events"
              style="border-width:0;font-family: Arial, Helvetica, sans-serif;" width="100%" height="100%" frameborder="0"
              scrolling="no"></iframe>
          </div>

        </div>

      </div>
    </section><!-- End Info Box Section -->

    <!-- ======= Our Inventory Section ======= -->
    <section id="services" class="services">
      <div class="container">

        <div class="section-title">
          <h2>Availability of material</h2>
          <p>components available right now</p>
        </div>

        <div class="container">
          <div class="row">
            <div class="col-12">
              <table class="table table-image">
                <thead>
                  <tr>
                    <th scope="col">S.no.</th>
                    <th scope="col">Component Name</th>
                    <th scope="col">Total</th>
                    <th scope="col">available</th>
                    <th scope="col">price</th>
                    <th scope="col"></th>
                    <th scope="col"></th>
                  </tr>
                </thead>
                <tbody>
                  <% for( var index = 1; index <= inventory.length; index++ ) { %>
                  <tr>
                    <th scope="row"><%= index %></th>
                    <td><%= inventory[index-1].toJSON()['name'] %></td>
                    <td><%= inventory[index-1].toJSON()['total'] %></td>
                    <td><%= inventory[index-1].toJSON()['available'] %></td>
                    <td><%= inventory[index-1].toJSON()['price'] %></td>
                    <td><a href="/inventory/<%= inventory[index-1].toJSON()['_id'] %>/update">
                        <div class="btn btn-primary">update</div>
                      </a></td>
                    <td><a href="/inventory/<%= inventory[index-1].toJSON()['_id'] %>/delete">
                        <div class="btn btn-primary">remove</div>
                      </a></td>
                  </tr>
                  <% } %>
                </tbody>
              </table>
              <a href="/inventory/create">
                <div class="btn btn-primary">Add</div>
              </a>
            </div>
          </div>
        </div>
        <br><br>
      </div>
    </section>

    <!-- ======= Projects Section ======= -->
    <section id="projects" class="more-services section-bg">
      <div class="container">
        <div class="section-title">

          <h2>Our Projects</h2>
          <p>These are the ongoing projects.Older projects can be found on <nbsp><a href="#">Archive </a></p>
        </div>

        <div class="row">
          <% for( let j = 0; j < projects.length; j++ ) { %>

          <div class="col-sm-6">
            <div class="card">
              <!-- <img src="assets/img/about.jpg" class="card-img-top" alt="..."> -->
              <div class="card-body">
                <h5 class="card-title"><a href=""><%= projects[j].toJSON()['name'] %></a></h5>
                <p class="card-text">
                  <i>
                    <%= projects[j].toJSON()['description'] %>
                  </i>
                </p>
                <p class="card-text">
                  project team:
                  <ul>
                    <li style="text-align-last:left;">Mentor: <%= projects[j].toJSON()['mentor'] %></li>
                    <li style="text-align-last:left;">Team: <%= projects[j].toJSON()['team'] %></li>
                  </ul>
                </p>
                <a href="/projects/<%= projects[j].toJSON()['_id'] %>/update" class="btn">Update</a>
                <a href="/projects/<%= projects[j].toJSON()['_id'] %>/delete">
                  <div class="btn btn-primary">remove</div>
                </a>

              </div>
            </div>
          </div>

          <% } %>
            <div class="col-sm-6">
              
              <div class="card">
                <div class="card-body" style="height:258px;">
                  <h5 class="card-title"><a href="/projects/create">ADD Project</a></h5>
                  <a href="/projects/create"><img src="/assets/img/slide/slide-1.jpg" id="adder_image" style="height:175px;width: 75%;position: relative;"></a>
                </div>
              </div>
              </a>
            </div>
        </div>

      </div>
    </section><!-- End More Services Section -->

    <!-- ======= Issue Requests Section ======= -->
    <section id="issue-requests" class="services">
      <div class="container">
        <div class="section-title">
          <!-- Heading -->
          <h2>Issue Requests</h2>
          <p>Components Management System</p>
        </div>

        <!-- Butto for reloading issues -->
        <div style="text-align: center;">
          <button class="btn btn-success" onclick=addRequestIssues()> Reload Requests</button>
        </div>

        <!-- Requests -->
        <!-- Script will add data here -->
        <div id="issue-list-container"></div>
      </div>
    </section>

    <!-- ======= Issues Accepted Section ======= -->
    <section id="issue-accepted" class="more-services section-bg">
      <div class="container">
        <div class="section-title">
          <!-- Heading -->
          <h2>Component Issued</h2>
          <p>Make changes when components are returned</p>
        </div>

        <!-- Requests -->
        <!-- Script will add data here -->
        <div id="return-list-container"></div>
      </div>
    </section>

    <!-- Edit Issue Modal -->
    <div class="modal fade bd-example-modal-lg" id="exampleModal" data-backdrop="static" data-keyboard="false" tabindex="-1" style="margin-top: 4rem;" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
      <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <h6 class="modal-title" id="exampleModalLabel">Edit Issue</h6>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
              <span aria-hidden="true">&times;</span>
            </button>
          </div>
          <div class="modal-body">

            <div id="modal-issue-id-holder" style="display: none;"></div>

            <!-- The Main content and form -->
            <div class="container-fluid modal-rows">
              <!-- Add item row wise here using js-->

            </div>
          </div>
          <div class="modal-footer">
            <div id="select-more-item-dropdown" style="margin-right: auto;">
              <select class="btn" style="border: 2px solid #1bbca3" onchange="addToModelBodyOnSelect()" id="add-item-issue-menu"></select>
            </div>
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
            <button type="button" class="btn btn-primary" onclick=sendRequestToUpdateIssue() >Save changes</button>
          </div>
        </div>
      </div>
    </div>

    <!-- use for getting list of items in modal -->
    <ul id="components-list-hidden" style="display: none;">
      <% for( var index = 1; index <= inventory.length; index++ ) { %>
        <li><%= inventory[index-1].toJSON()['name'] %></li>
      <% } %>
    </ul>

    <!-- total list of each item in the form of JSON -->
    <div id="total-list-hidden" style="display: none;">
      {
      <% for( var index = 1; index < inventory.length; index++ ) { %>
        "<%= inventory[index-1].toJSON()['name'] %>" : <%= inventory[index-1].toJSON()['total'] %>,
      <% } %>
      "<%= inventory[(inventory.length)-1].toJSON()['name'] %>" : <%= inventory[(inventory.length)-1].toJSON()['total'] %>
      }
    </div>

    <!-- Scripts for updating the ui of requests -->
    <script>
      window.addEventListener('DOMContentLoaded', (event) => {
        // console.log('DOM fully loaded and parsed');
        addRequestIssues();
      });
    </script>

    <!-- Very Important == While changing this script take care of the modal script also -->
    <!-- Script for adding values in the two issues section -->
    <script>
      function addRequestIssues(){
        var xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function() {

          if(this.readyState == 4 && this.status == 200){
            
            var resArr = JSON.parse(this.responseText).msg;
            // console.log(resArr);

            // Now update the UI very carefully in <div id="section-requests-components">
            var requestSection = document.getElementById('issue-list-container');
            var returnSection = document.getElementById('return-list-container');

            // Clear the innerHTML
            requestSection.innerHTML = '';
            returnSection.innerHTML = '';

            for (var i=0; i < resArr.length; i++ ){

              // Expand collpase button
              var buttonExpandView = '<button '
              + 'class="btn btn-info expand-collapse-btn" '
              + 'onclick=expandTileById("' + resArr[i]._id + '") > '
              + 'Expand '
              + '</button>';

              // Components data in the form of table
              var componentsTableString = '<table class="table request-history-component-table">'
                  + '<tbody>';
                var itemsLength = resArr[i].items.length;
                for(var key in resArr[i].items) {
                  componentsTableString += '<tr>'
                    + '<td>' + key + '</td>'
                    + '<td>' + resArr[i].items[key] + '</td>'
                    + '</tr>';
                }
                componentsTableString += '</tbody>'
                 + '</table><hr>';
                // console.log(componentsTableString);


              if(resArr[i].status === "Requested" || resArr[i].status === "requested"){
                
                // These are the ones requested by students
                requestSection.innerHTML += '<div id="' + resArr[i]._id + '" class="request-item-tile">'
                + '<div class="row">'
                  + '<div class="col">'
                    + '<!-- Name -->'
                    + resArr[i].name
                  + '</div>'
                  + '<div class="col">'
                    + '<!-- Roll No -->'
                    + resArr[i].email
                  + '</div>'
                  + '<div class="col">'
                    + '<!-- Date -->'
                    + resArr[i].date_of_issue.toString().substr(0,10)
                  + '</div>'
                  + '<div class="col">'
                    + '<!-- Button to view -->'
                    + buttonExpandView
                  + '</div>'
                + '</div>'
                + '<div class="hidden-tile-view" style="margin-top: 10px; display: none;">'
                  + '<!-- Table of Components -->'
                  + componentsTableString
                  + '<div class="row">'
                      + '<!-- Some Helpful buttons-->'
                      + '<div class="col">'
                        + '<!-- Accept Button -->'
                        + '<Button '
                          + 'class="btn btn-success" style="margin: 10px;" '
                          + 'onclick=acceptThisIssue("' + resArr[i]._id + '") >'
                          + 'Accept'
                        + '</button>'
                      + '</div>'
                      + '<div class="col">'
                        + '<!-- Reject Button -->'
                        + '<Button '
                          + 'class="btn btn-danger" style="margin: 10px;" '
                          + 'onclick=removeThisIssue("' + resArr[i]._id + '") >'
                          + 'Reject'
                        + '</button>'
                      + '</div>'
                      + '<div class="col">'
                        + '<!-- Edit Button (To be added soon) -->'
                        + '<Button '
                          + 'class="btn btn-secondary" style="margin: 10px;" '
                          + 'onclick=modalPrepare("' + resArr[i]._id + '") >'
                          + 'Edit'
                        + '</button>'
                      + '</div>'
                    + '</div>'
                  + '</div>'
                + '</div>';
                
              } else {
                
                // These are the ones which are actually issued and accepted that the items are issued
                returnSection.innerHTML += '<div id="' + resArr[i]._id + '" class="request-item-tile">'
                + '<div class="row">'
                  + '<div class="col">'
                    + '<!-- Name -->'
                    + resArr[i].name
                  + '</div>'
                  + '<div class="col">'
                    + '<!-- Roll No -->'
                    + resArr[i].email
                  + '</div>'
                  + '<div class="col">'
                    + '<!-- Date -->'
                    + resArr[i].date_of_issue.toString().substr(0,10)
                  + '</div>'
                  + '<div class="col">'
                    + '<!-- Button to view -->'
                    + buttonExpandView
                    + '</div>'
                  + '</div>'
                  + '<div class="hidden-tile-view" style="margin-top: 10px; display:none;">'
                    + '<!-- Table of Components -->'
                    + componentsTableString
                    + '<div class="row">'
                      + '<!-- Some Helpful buttons-->'
                      + '<div class="col">'
                        + '<!-- Remove Button -->'
                        + '<Button '
                          + 'class="btn btn-danger" style="margin: 10px;" '
                          + 'onclick=removeThisIssue("' + resArr[i]._id + '") >'
                          + 'Remove'
                        + '</button>'
                      + '</div>'
                      + '<div class="col">'
                        + '<!-- Edit Button (To be added soon) -->'
                        + '<Button '
                          + 'class="btn btn-secondary" style="margin: 10px;" '
                          + 'onclick=modalPrepare("' + resArr[i]._id + '") >'
                          + 'Edit'
                        + '</button>'
                      + '</div>'
                    + '</div>'
                  + '</div>'
                + '</div>';
              }

            } // end of for loop

          }
        }

        // Send requests
        xhttp.open("POST", '/issues/all', true);
        xhttp.send();
      }
    </script>

    <!-- Script for expansion and collapsion -->
    <script>
      function expandTileById(issueId){
        var tileById = document.getElementById(issueId);
        // console.log("Expand this: ", tileById);
        
        var hideTileClass = tileById.getElementsByClassName('hidden-tile-view')[0];
        // console.log(hideTileClass.style.display);

        var expandCollapseBtn = tileById.getElementsByClassName('expand-collapse-btn')[0];

        if(hideTileClass.style.display === "none"){
          hideTileClass.style.display = "block";
          expandCollapseBtn.innerHTML = "Collapse";
        } else{
          hideTileClass.style.display = "none";
          expandCollapseBtn.innerHTML = "Expand";
        }

      }
    </script>

    <!-- Script for accepting issue requests -->
    <script>
      function acceptThisIssue(issueId){

        // Send the request to server to accept this issue request with _id = issueid
        // Create the reciever
        xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function() {
          if( this.status=200 && this.readyState==4 ){
            
            // console.log(this.responseText);
            if(JSON.parse(this.responseText).success == 1){

              // Accept succeed
              // Now update the UI
              addRequestIssues();
            }
          }
        }

        // Send requests
        xhttp.open("POST", '/issues/' + issueId + '/accept', true);
        xhttp.send();
      }
    </script>

    <!-- Script for rejecting or say deleting -->
    <script>
      function removeThisIssue(issueId){

        var xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function(){
          if(this.readyState == 4 && this.status == 200){

            var resArr = JSON.parse(this.responseText);
            if(resArr.success == 1){

              // Update the UI (successfully deleted)
              addRequestIssues();

            } else{
              console.log("Mongodb error");
            }
          }
        }

        // Defining parameters 
        xhttp.open("POST", '/issues/'+ issueId +'/delete', true);
        xhttp.send();
      }
    </script>

    <!-- Script for preparing and displaying the modal -> exampleModal -->
    <script>
      function modalPrepare(issueId) {
        console.log("Open the model");
        
        // Get the modal details
        var myModal = document.getElementById('exampleModal');
        var modalTitle = myModal.getElementsByClassName('modal-title')[0];
        
        var whereItIsCalled = document.getElementById(issueId);
        var whereItIsCalledHeaderList = whereItIsCalled.getElementsByClassName('row')[0].getElementsByClassName('col');

        // Setting the id in the div of Modal for need in future
        document.getElementById('modal-issue-id-holder').innerHTML = issueId;

        // setting the email of the user as heading
        modalTitle.innerHTML = whereItIsCalledHeaderList[1].innerHTML;

        // Get the items and their count list
        var whereItIsCalledTableRows = whereItIsCalled.getElementsByTagName('table')[0].getElementsByTagName('tr'); // Here inside <td> is the required values we need

        // For modal body
        var ModalBodyTable = '';
        var whereItIsCalledTds = '';
        var currentCount = 0;
        var currentCountString = '';
        itemsIssueMap = {};
        for(var i=0; i < whereItIsCalledTableRows.length; i++){
          // console.log(whereItIsCalledTableRows[i]);
          itemsIssueMap[whereItIsCalledTableRows[i].getElementsByTagName('td')[0].innerHTML] = parseInt( whereItIsCalledTableRows[i].getElementsByTagName('td')[1].innerHTML , 10);

          whereItIsCalledTds += '<div class="row" style="padding:4px;" >';
          
          // For the name of item
          var componentName = whereItIsCalledTableRows[i].getElementsByTagName('td')[0].innerHTML;
          whereItIsCalledTds += '<div class="col-5">' + componentName + '</div>';

          // Create a list of numbers for values to issue
          whereItIsCalledTds += '<div class="col-3"> <select>';

          // Get the total of each item
          var totalListHiddenJson = JSON.parse(document.getElementById('total-list-hidden').innerHTML);

          currentCount = parseInt( whereItIsCalledTableRows[i].getElementsByTagName('td')[1].innerHTML , 10);
          // console.log(currentCount);

          for(var j=1; j <= totalListHiddenJson[componentName] ; j++){
            if(j == currentCount){
              whereItIsCalledTds += '<option value="' + j + '" selected>' + j + '</option>';
            } else{
              whereItIsCalledTds += '<option value="' + j + '" >' + j + '</option>';
            }
            
          }
          whereItIsCalledTds += '</select></div>';

          // For delete button of that particular item
          whereItIsCalledTds += '<div class="col-4">'
            + '<button class="btn btn-success" onclick=removeThisModalRow(this) > Delete </button>' 
          + '</div>'
          + '</div>';
          whereItIsCalled += '</div>'; // end of the row division
          
        }
        // console.log("itemsIssueMap", itemsIssueMap);  
        // console.log(whereItIsCalled);

        // Adding all the rows created
        var modalRows = myModal.getElementsByClassName('modal-rows')[0];
        modalRows.innerHTML = whereItIsCalledTds;


        // Modal footer options create
        optionCreate = '';
        optionCreate += '<option value="">Add</option>'
        var itemsList = document.getElementById('components-list-hidden').getElementsByTagName('li');
        for(var i=0; i<itemsList.length; i++){

          if(itemsList[i].innerHTML in itemsIssueMap){
            // console.log("Yes this item is already issued not add this");
          } else {
            optionCreate += '<option value="' + itemsList[i].innerHTML + '" >' + itemsList[i].innerHTML + '</option>';
          }
        }

        // this adds items at the add menu list of the modal footer <select is created there with id add-item-issue-menu
        document.getElementById('add-item-issue-menu').innerHTML = optionCreate;

        $("#exampleModal").modal(); // Opens the modal
      }
    </script>

    <!-- Script for removing the row on delete -->
    <script>
      function removeThisModalRow(r){

        // Get the selected one r -> this
        var selectedRow = r.parentNode.parentNode; //This should not have space(but it has !problem)
        // console.log(selectedRow);

        // Get the name of the item from the row
        var selectedRowName = selectedRow.getElementsByTagName('div')[0].innerHTML;
        // console.log(selectedRowName);

        // Add the item to the add-item-issue-menu <select>
        var addItemIssueMenu = document.getElementById('add-item-issue-menu');
        addItemIssueMenu.innerHTML += '<option value="' + selectedRowName + '" >' + selectedRowName + '</option>';

        selectedRow.remove(); // Removing the item from modal-row
      }
    </script>

    <!-- Add from drop down to main body -->
    <script>
      function addToModelBodyOnSelect() {
        var addItemIssueMenu = document.getElementById('add-item-issue-menu'); // The <select>
        var selectedOption = addItemIssueMenu.value;
        var selectIndex = addItemIssueMenu.selectedIndex;
        // console.log("Selected Option", selectedOption);
        // console.log("selected Index", selectIndex);

        // Now Adding to the main Modal
        var myModal = document.getElementById('exampleModal');
        var modalBodyRows = myModal.getElementsByClassName('modal-rows')[0];
        // console.log(modalBodyRows);

        modalBodyRowsString = '';
        modalBodyRowsString += '<div class="row" style="padding: 4px;">';

        modalBodyRowsString += '<div class="col-5">' + selectedOption + '</div>'

        modalBodyRowsString +=  '<div class="col-3"> <select>'
          + '<option value="1" selected> 1 </option>';

        // Get the total of each item
        var totalListHiddenJson = JSON.parse(document.getElementById('total-list-hidden').innerHTML);

        for(var j=2; j <= totalListHiddenJson[selectedOption] ; j++){
          modalBodyRowsString += '<option value="' + j + '" >' + j + '</option>';
        }

        modalBodyRowsString += '</select></div>';

        modalBodyRowsString += '<div class="col-4">'
            + '<button class="btn btn-success" onclick=removeThisModalRow(this) > Delete </button>' 
          + '</div>'
        + '</div>'; // End of row

        modalBodyRows.innerHTML += modalBodyRowsString;
        // console.log(modalBodyRows);
        // Done Main modal

        addItemIssueMenu.remove(selectIndex);
        // Set the option back to empty (Add)
        addItemIssueMenu.value = "";
      }
    </script>

    <!-- Script for updating by taking the values from the Modal and then updating -->
    <script>
      function sendRequestToUpdateIssue(){
        var myModal = document.getElementById('exampleModal');
        var issueId = document.getElementById('modal-issue-id-holder').innerHTML;
        var modalRowsList = myModal.getElementsByClassName('modal-rows')[0].getElementsByClassName('row');
        
        var reqItems = {};

        // Get the name and thier count from the Modal and add in reqbody
        var itemName = '';
        var itemCount = '';
        var row = '';
        // console.log(modalRowsList);
        for(var i=0; i < modalRowsList.length; i++){
          row = modalRowsList[i].getElementsByTagName('div');
          itemName = row[0].innerHTML;
          itemCount = row[1].getElementsByTagName('select')[0].value;
          // console.log(itemName);
          // console.log(itemCount);
          reqItems[itemName] = itemCount;
        }

        // Now the request body is ready, make the request
        // console.log(reqItems);
        
        var reqbody = {
          items: reqItems
        };
        // console.log(reqbody);

        // Now send the data to update
        var xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function() {
          if (this.readyState == 4 && this.status == 200 ) {

            var resArr = JSON.parse(this.responseText);
            if(resArr.success == 1){

              console.log("Update successfully");
              // Close the modal
              $('#exampleModal').modal('hide');

              // Update UI
              // Not reload the whole UI
              var issueTile = document.getElementById(issueId);
              var issueTable = issueTile.getElementsByClassName('hidden-tile-view')[0].getElementsByTagName('table')[0];
              // console.log(issueTable);

              var issueTableString = '<tbody>';
              
              for(var xitem in reqItems) {
                issueTableString += '<tr>'
                  + '<td>' + xitem + '</td>'
                  + '<td>' + reqItems[xitem] + '</td>'
                  + '</tr>';
              }
              issueTableString += '</tbody>';
              
              // Update table
              issueTable.innerHTML = issueTableString;

            } else{
              alert("Update Failed at server side!");
            }
          }
        }

        xhttp.open("POST", '/issues/' + issueId + '/update', true);
        //Send the proper header information along with the request
        xhttp.setRequestHeader("Content-Type", "application/json"); // Necessary for POST
        xhttp.send(JSON.stringify(reqbody));

      }
    </script>

  </main><!-- End #main -->

  <%- include('include/footer-section.ejs'); %>

  <a href="#" class="back-to-top"><i class="icofont-simple-up"></i></a>
  <script src="assets/js/database.js"></script>
  <!-- Vendor JS Files -->
  <script src="assets/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
  <script src="assets/vendor/jquery.easing/jquery.easing.min.js"></script>
  <script src="assets/vendor/php-email-form/validate.js"></script>
  <script src="assets/vendor/jquery-sticky/jquery.sticky.js"></script>
  <!-- <script src="assets/vendor/waypoints/jquery.waypoints.min.js"></script> -->
  <!-- <script src="assets/vendor/counterup/counterup.min.js"></script> -->
  <!-- <script src="assets/vendor/isotope-layout/isotope.pkgd.min.js"></script> -->
  <!-- <script src="assets/vendor/venobox/venobox.min.js"></script> -->

  <!-- Template Main JS File -->
  <script src="assets/js/main.js"></script>


</body>

</html>