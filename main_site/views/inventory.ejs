<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta content="width=device-width, initial-scale=1.0" name="viewport">

  <!-- Google Sign in meta tags -->
  <!-- Take care of whitelist urls -->
  <meta name="google-signin-client_id" content="520362272726-v179ufso0lqui81s8uhnhkngfr8k26qn.apps.googleusercontent.com">

  <!-- googel sign in script -->
  <script src="https://apis.google.com/js/platform.js" async defer></script>

  <title>Robotronics Club IIT MANDI</title>
  <meta content="" name="descriptison">
  <meta content="" name="keywords">

  <!-- Favicons -->
  <link href="assets/img/logo.png" rel="icon">
  <link href="assets/img/apple-touch-icon.png" rel="apple-touch-icon">

  <!-- Google Fonts -->
  <link
    href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Roboto:300,300i,400,400i,500,500i,700,700i|Poppins:300,300i,400,400i,500,500i,600,600i,700,700i"
    rel="stylesheet">

  <!-- Vendor CSS Files -->
  <link href="assets/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">
  <link href="assets/vendor/icofont/icofont.min.css" rel="stylesheet">
  <link href="assets/vendor/boxicons/css/boxicons.min.css" rel="stylesheet">
  <link href="assets/vendor/animate.css/animate.min.css" rel="stylesheet">
  <link href="assets/vendor/venobox/venobox.css" rel="stylesheet">

  <!-- Template Main CSS File -->
  <link href="assets/css/style.css" rel="stylesheet">

  <style>
    @media only screen and (max-width: 360px) { /* Set this experimentally */
      .not-in-mobile { 
        display: none;
      }
    }
    @media only screen and (max-width: 450px) { /* Set this experimentally */
      .table { 
        margin-left: -26px;
      }
      .inline-items {
        display: inline-block;
        float: none !important;
      }
    }

    .myissues-section-tile { 
      color: rgba(153, 152, 152, 0.986);
      background-color: #ffffff;
      padding: 12px;
      margin: 24px;
      box-shadow: 0 2px 2px 0 rgba(0,0,0,0.14), 0 3px 1px -2px rgba(0,0,0,0.12), 0 1px 5px 0 rgba(0,0,0,0.2);
    }

    #request-history-component-table {
      margin-left: auto;
      margin-right: auto;
      width: 60%;
    }

    .inline-items {
      display: inline-block;
    }
  </style>
  

  <!-- =======================================================
  * Template Name: Shuffle - v2.0.0
  * Template URL: https://bootstrapmade.com/bootstrap-3-one-page-template-free-shuffle/
  * Author: BootstrapMade.com
  * License: https://bootstrapmade.com/license/
  ======================================================== -->
</head>

<body>

  <!-- ======= Header ======= -->
  <header id="header">
    <div class="container d-flex">

      <div class="logo mr-auto">
        <a href="index.html"><img src="assets/img/logo.png" alt=""
            style="float:left;height: 70%;background-color: black;" class="img-fluid"></a>


      </div>

      <nav class="nav-menu d-none d-lg-block">
        <ul>
          <li><a href="/">Home</a></li>
          <li><a href="#">Club-Inventory</a></li>
          <li><a href="/">About Us</a></li>
          <li><a href="/projects">Projects</a></li>
          <li><a href="#contact">Contact</a></li>
        </ul>
      </nav><!-- .nav-menu -->

    </div>
  </header><!-- End Header -->

  <main id="main">

    <!-- ======= Our Projects Section ======= -->
    <section id="services" class="services" style="padding-bottom: 0 !important;">
      <div class="container">

        <div class="section-title">
          <h2>Availability of material</h2>

          <div style="margin-left: auto; margin-right: auto; max-width: 400px; padding: 8px;">
            <span style="font-size:x-large;">Sign in to Issue</span>
            <div id="signInButton" class="g-signin2" data-onsuccess="onSignIn" data-theme="dark" style="float: right; margin-right: 8px;"></div>
            
            
            <div id="signOutButtonStyle" style="height:36px;width:120px; float: right; margin-right: 8px; display: none;" class="abcRioButton abcRioButtonBlue">
              <div class="abcRioButtonContentWrapper"><div class="abcRioButtonIcon" style="padding:8px">
                <div style="width:18px;height:18px;" class="abcRioButtonSvgImageWithFallback abcRioButtonIconImage abcRioButtonIconImage18">
                  <svg version="1.1" xmlns="http://www.w3.org/2000/svg" width="18px" height="18px" viewBox="0 0 48 48" class="abcRioButtonSvg">
                    <g>
                      <path fill="#EA4335" d="M24 9.5c3.54 0 6.71 1.22 9.21 3.6l6.85-6.85C35.9 2.38 30.47 0 24 0 14.62 0 6.51 5.38 2.56 13.22l7.98 6.19C12.43 13.72 17.74 9.5 24 9.5z"></path>
                      <path fill="#4285F4" d="M46.98 24.55c0-1.57-.15-3.09-.38-4.55H24v9.02h12.94c-.58 2.96-2.26 5.48-4.78 7.18l7.73 6c4.51-4.18 7.09-10.36 7.09-17.65z"></path>
                      <path fill="#FBBC05" d="M10.53 28.59c-.48-1.45-.76-2.99-.76-4.59s.27-3.14.76-4.59l-7.98-6.19C.92 16.46 0 20.12 0 24c0 3.88.92 7.54 2.56 10.78l7.97-6.19z"></path>
                      <path fill="#34A853" d="M24 48c6.48 0 11.93-2.13 15.89-5.81l-7.73-6c-2.15 1.45-4.92 2.3-8.16 2.3-6.26 0-11.57-4.22-13.47-9.91l-7.98 6.19C6.51 42.62 14.62 48 24 48z"></path>
                      <path fill="none" d="M0 0h48v48H0z"></path>
                    </g>
                  </svg>
                </div>
              </div>
            <span id="signOutButton" onclick="signOut();" style="font-size:13px;line-height:34px;" class="abcRioButtonContents">Sign Out</span>
            </div>
          </div>

          <div style="margin-left: auto; margin-right: auto; max-width: 400px; padding: 8px;">
            <h3 id="welcome-user" style="display: none;"></h3>
          </div>

        </div>


        <!-- google sign out function -->
        <script>
          function signOut() {
            var auth2 = gapi.auth2.getAuthInstance();
            auth2.signOut().then(function () {
              console.log('User signed out.');
            });

            // Used overall variables
            window.email = "";
            window.uname = "";
            // Changing these will have no effect as only for some tasks they are used

            // Important for UI for botht signOut and signIn
            // Set the display of the sign in and sign out buttons
            document.getElementById('signInButton').style.display = "block";
            document.getElementById('signOutButton').style.display = "none";
            document.getElementById('signOutButtonStyle').style.display = "none";
            document.getElementById('issue-button-div').style.display = "none";
            document.getElementById('request-history-heading').style.display = "none";

            // Get the myissues section and clear it
            var section = document.getElementById('myissues-section');
            section.innerHTML = '';

            // Show the user name so that, he can be sure that he is successfully signed in!
            var showUser = document.getElementById('welcome-user');
            showUser.style.display="none";
            showUser.innerHTML = '';
          }
        </script>

        <!--  google sign in function -->
        <script>
          function onSignIn(googleUser) {
            console.log("This implies user is signed in!");
            // Now get the data and show the required details
            
            var profile = googleUser.getBasicProfile();

            window.email = profile.getEmail();
            window.uname = profile.getName();

            //console.log('ID: ' + profile.getId()); // Do not send to your backend! Use an ID token instead.
            //console.log('Name: ' + window.uname);
            //console.log('Image URL: ' + profile.getImageUrl());
            //console.log('Email: ' + window.email); // This is null if the 'email' scope is not present.

            // Set the display of the sign in and sign out buttons
            document.getElementById('signInButton').style.display = "none";
            document.getElementById('signOutButton').style.display = "block";
            document.getElementById('signOutButtonStyle').style.display = "block";
            document.getElementById('issue-button-div').style.display = "block";
            document.getElementById('request-history-heading').style.display = "block";

            // Show the user name so that, he can be sure that he is successfully signed in!
            var showUser = document.getElementById('welcome-user');
            showUser.style.display="block";
            showUser.innerHTML += 'Welcome '+window.uname;

            // Function to make a issue request
            sendIssueRequestToServer=()=>{
              //console.log("SEnding request!");

              var reqItems = {};
              var validReq = false;
              // Getting the all selected items for making issue
              var cheItems = document.getElementsByClassName('issue-row-count');  //HTMLCollection having all the select ones
              //console.log(che);
              //console.log(che.length);
              for (var i = 0; i < cheItems.length; i++) {
                //console.log(cheItems.item(i));
                //console.log(cheItems.item(i).value);
                //console.log(cheItems.item(i).name);
                var itemCount = cheItems.item(i).value;
                if (itemCount > 0) {
                  validReq = true;
                  reqItems[cheItems.item(i).name] = itemCount // Making the items json data
                }
              }

              // Items list ready
              console.log(reqItems);

              if (validReq) {
                var xhttp = new XMLHttpRequest();
                xhttp.onreadystatechange = function () {
                  if (this.readyState == 4 && this.status == 200) {
                    // If the adding item succeed!
                    // Create a random show that the request is succeed! (alert)
                    // Clear all the text Box
                    var resArr = JSON.parse(this.responseText);
                    //console.log(this.responseText);
                    //console.log(this.responseText['success']);

                    // This checks wheather the request succeed or not
                    if (resArr['success'] == 1) {

                      alert('Components Issue Request Submitted!');

                      // Making the selections empty
                      for (var i = 0; i < cheItems.length; i++) {
                        //console.log(cheItems.item(i));
                        //console.log(cheItems.item(i).value);
                        //console.log(cheItems.item(i).name);
                        cheItems.item(i).value = "0";
                      }

                      // Updating my issues
                      getMyIssues(window.email);

                    } else {
                      alert('Request Failed!');
                    }
                  } // End of status if
                };

                // console.log(googleUser.getBasicProfile());
                // The body parameters to send
                var reqbody = {
                  name: profile.getName(),
                  email: profile.getEmail(),
                  items: reqItems
                };
                //console.log(reqbody);

                xhttp.open("POST", "/issues/create", true);
                //Send the proper header information along with the request
                xhttp.setRequestHeader("Content-Type", "application/json"); // Necessary for POST

                xhttp.send(JSON.stringify(reqbody));

              } else {
                alert('First, select atleast a component!');
              }
            }
          
            getMyIssues=(email)=> {

              // Defining request body
              var reqbody = {
                email: email
              }

              // Make request and get response
              var xhttp = new XMLHttpRequest();
              xhttp.onreadystatechange = function () {
                if (this.readyState == 4 && this.status == 200) {

                  var resArr = JSON.parse(this.responseText);
                  console.log(resArr);
                  if (resArr.success == 1) {

                    // Get the myissues section
                    var section = document.getElementById('myissues-section');
                    section.innerHTML = '';

                    var issuesData = resArr.msg;
                    for (var i = issuesData.length - 1; i >= 0; i--) {
                      //console.log(issuesData[i]);

                      var componentsTableString = '<table class="table" id="request-history-component-table">'
                        + '<tbody>';
                      var itemsLength = issuesData[i].items.length;
                      for (var key in issuesData[i].items) {
                        componentsTableString += '<tr>'
                          + '<td>' + key + '</td>'
                          + '<td>' + issuesData[i].items[key] + '</td>'
                          + '</tr>';
                      }
                      componentsTableString += '</tbody>'
                        + '</table><hr>';
                      //console.log(componentsTableString);

                      var cancelRequestButton = '';
                      var showAcceptedText = '<h3 style="color: green">Accepted and Component Issued</h3>';
                      if (issuesData[i].status === "Requested") {
                        //console.log("Yes show cancel button");
                        cancelRequestButton = '<Button class="btn btn-danger"'
                          + ' onclick=removeIssue("' + issuesData[i]._id + '")> Cancel'
                          + '</button>';
                        showAcceptedText = '';
                      }

                      // Now update the UI
                      section.innerHTML += '<div class="myissues-section-tile">'
                        + '<h3 class="inline-items" style="text-align: left; float: left"> Date: ' + issuesData[i].date_of_issue.toString().substr(0, 10) + '</h3>'
                        + '<h3 class="inline-items" style="text-align: right; float: right">' + issuesData[i].status + '</h3>'
                        + '<br><br>'
                        + componentsTableString
                        + cancelRequestButton
                        + showAcceptedText
                        + '</div>';

                    }

                  } else {
                    console.log("Getting my issues failed!");
                  }
                } // End of status if
              }

              // Defining parameters 
              xhttp.open("POST", "/issues/myissues", true);
              //Send the proper header information along with the request
              xhttp.setRequestHeader("Content-Type", "application/json"); // Necessary for POST

              xhttp.send(JSON.stringify(reqbody));

            }
          
            removeIssue = (issueId) => {

              // Make request and get response
              var xhttp = new XMLHttpRequest();
              xhttp.onreadystatechange = function () {
                if (this.readyState == 4 && this.status == 200) {

                  var resArr = JSON.parse(this.responseText);
                  //console.log(resArr);

                  if (resArr.success == 1) {
                    //console.log("Successfuly deleted!");

                    // Update the list and UI
                    getMyIssues(profile.getEmail());

                  } else {
                    console.log("Problem at server side!");
                  }

                } // End of status if
              }

              // Defining parameters 
              xhttp.open("POST", '/issues/' + issueId + '/delete', true);
              xhttp.send();

            }

            // Updating my issues
            getMyIssues(profile.getEmail());

          }
        </script>
        
        <div class="container">
          <div class="row">
            <div class="col-12">
              <table class="table table-image">
                <thead>
                  <tr>
                    <th scope="col" class="not-in-mobile">S.no.</th>
                    <th scope="col">Component</th>
                    <th scope="col">Total</th>
                    <th scope="col">Available</th>
                    <th scope="col" id="issue-cl-header">Issue</th>
                  </tr>
                </thead>
                <tbody>
                  <% for( var index = 1; index <= array.length; index++ ) { %>
                  <tr>
                    <th scope="row" class="not-in-mobile"><%= index %></th>
                    <td><%= array[index-1].toJSON()['name'] %></td>
                    <td><%= array[index-1].toJSON()['total'] %></td>
                    <td><%= array[index-1].toJSON()['available'] %></td>

                    <td><select name="<%= array[index-1].toJSON()['name'] %>" class="issue-row-count">
                      <!-- Create Options -->
                      <option value=0>0</option>
                      <% for(var j = 1; j<= array[index-1].toJSON()['available']; j++ ) { %>
                        <option value="<%= j %>"> <%= j %> </option>
                      <% } %>
                    </select></td>
                    
                  </tr>
                  <% } %>
                </tbody>
              </table>
            </div>
          </div>
          <div id="issue-button-div" style="display: none;">
            <Button id="issue-button" type="button" class="btn btn-success" onclick="sendIssueRequestToServer()">Request Issue Components</Button>
          </div>
        </div>
        <br><br>
      </div>
    </section>

    <section id="services" class="services section-bg" style="padding-top: 16px !important;">
      <div class="container">

        <!-- My issues section -->

        <!-- Heading-->
        <div class="section-title" id="request-history-heading" style="padding-bottom: 4px !important; display: none;">
          <h2>Requests History</h2>
        </div>

        <!-- Add here -->
        <!-- Use class="myissues-section-tile"-->
        <div id="myissues-section">
          
        </div>
      </div>
    </section>

  </main><!-- End #main -->

  <!-- ======= Footer ======= -->
  <footer id="footer">
    <div class="footer-top">
      <div class="container">
        <div class="row">

          <div class="col-lg-3 col-md-6 footer-info">
            <h3>Robotronics Club <br>IIT MANDI</h3>

          </div>

          <div class="col-lg-2 col-md-6 footer-links">

          </div>

          <div class="col-lg-3 col-md-6 footer-links">

          </div>

          <div class="col-lg-4 col-md-6 footer-newsletter">
            <img src="assets/img/logo.png" style="position: relative;max-width: 100%;" alt="">
          </div>

        </div>
      </div>
    </div>

    <div class="container">
      <div class="copyright">
        Made with ❤️ on Express.js by <strong><span>Robotrocics Club, IIT MANDI</span></strong>.
      </div>
      <div class="credits">
        <!-- All the links in the footer should remain intact. -->
        <!-- You can delete the links only if you purchased the pro version. -->
        <!-- Licensing information: https://bootstrapmade.com/license/ -->
        <!-- Purchase the pro version with working PHP/AJAX contact form: https://bootstrapmade.com/bootstrap-3-one-page-template-free-shuffle/ -->
        Designed by Dipanshu, Nidhi, Pratyush, Priyam and Rohan
      </div>
    </div>
  </footer><!-- End Footer -->

  <a href="#" class="back-to-top"><i class="icofont-simple-up"></i></a>

  <!-- Vendor JS Files -->
  <script src="assets/vendor/jquery/jquery.min.js"></script>
  <script src="assets/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
  <script src="assets/vendor/jquery.easing/jquery.easing.min.js"></script>
  <script src="assets/vendor/php-email-form/validate.js"></script>
  <script src="assets/vendor/jquery-sticky/jquery.sticky.js"></script>
  <script src="assets/vendor/waypoints/jquery.waypoints.min.js"></script>
  <script src="assets/vendor/counterup/counterup.min.js"></script>
  <script src="assets/vendor/isotope-layout/isotope.pkgd.min.js"></script>
  <script src="assets/vendor/venobox/venobox.min.js"></script>

  <!-- Template Main JS File -->
  <script src="assets/js/main.js"></script>

</body>

</html>